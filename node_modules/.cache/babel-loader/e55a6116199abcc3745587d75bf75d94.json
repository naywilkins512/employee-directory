{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/naywilkins/Desktop/Code School/Homework/employee-directory/employee-directory/src/components/employeeTable/EmployeeTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport employees from '../../employees.json';\n\nhandleInputChange = event => {\n  // Getting the value and name of the input which triggered the change\n  let value = event.target.value;\n  const name = event.target.name;\n\n  if (name === \"password\") {\n    value = value.substring(0, 15);\n  } // Updating the input's state\n\n\n  this.setState({\n    [name]: value\n  });\n};\n\nfunction EmployeeTable() {\n  _s();\n\n  const [employeeState, setEmployeeState] = useState(employees);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"First\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Occupation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employeeState.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: employee.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.occupation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeeTable, \"uCU2z7S6zR7hcNc02hja7DZ1OHY=\");\n\n_c = EmployeeTable;\nexport default EmployeeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeTable\");","map":{"version":3,"sources":["/Users/naywilkins/Desktop/Code School/Homework/employee-directory/employee-directory/src/components/employeeTable/EmployeeTable.js"],"names":["React","useState","employees","handleInputChange","event","value","target","name","substring","setState","EmployeeTable","employeeState","setEmployeeState","map","employee","id","occupation","location"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAGAC,iBAAiB,GAAGC,KAAK,IAAI;AACzB;AACA,MAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACA,QAAME,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAA1B;;AAEA,MAAIA,IAAI,KAAK,UAAb,EAAyB;AACvBF,IAAAA,KAAK,GAAGA,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmB,EAAnB,CAAR;AACD,GAPwB,CAQzB;;;AACA,OAAKC,QAAL,CAAc;AACZ,KAACF,IAAD,GAAQF;AADI,GAAd;AAGD,CAZH;;AAeA,SAASK,aAAT,GAAyB;AAAA;;AAErB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAACC,SAAD,CAAlD;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAA,8BACH;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADG,eASH;AAAA,kBACES,aAAa,CAACE,GAAd,CAAkBC,QAAQ,iBAAK;AAAA,kCAC7B;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA,sBAAiBA,QAAQ,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAD6B,eAE7B;AAAA,sBAAKD,QAAQ,CAACP;AAAd;AAAA;AAAA;AAAA;AAAA,kBAF6B,eAG7B;AAAA,sBAAKO,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAH6B,eAI7B;AAAA,sBAAKF,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,kBAJ6B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B;AADF;AAAA;AAAA;AAAA;AAAA,cATG;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA3BIP,a;;KAAAA,a;AA6BL,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport employees from '../../employees.json';\n\n\nhandleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    let value = event.target.value;\n    const name = event.target.name;\n\n    if (name === \"password\") {\n      value = value.substring(0, 15);\n    }\n    // Updating the input's state\n    this.setState({\n      [name]: value\n    });\n  };\n\n\nfunction EmployeeTable() {\n\n    const [employeeState, setEmployeeState] = useState(employees);\n    \n      return (\n        <div className=\"App\">\n         <table className=\"table table-dark\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">First</th>\n          <th scope=\"col\">Occupation</th>\n          <th scope=\"col\">Location</th>\n        </tr>\n      </thead>\n      <tbody>\n       {employeeState.map(employee => (<tr>\n          <th scope=\"row\">{employee.id}</th>\n          <td>{employee.name}</td>\n          <td>{employee.occupation}</td>\n          <td>{employee.location}</td>\n        </tr>))}\n       \n      </tbody>\n    </table>\n        </div>\n      );\n    }\n    \n    export default EmployeeTable;"]},"metadata":{},"sourceType":"module"}