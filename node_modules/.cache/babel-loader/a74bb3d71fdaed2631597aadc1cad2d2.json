{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/naywilkins/Desktop/Code School/Homework/employee-directory/employee-directory/src/components/employeeTable/EmployeeTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport employees from '../../employees.json';\nimport Nav from '../nav/Nav';\n\nfunction EmployeeTable() {\n  _s();\n\n  const [employeeState, setEmployeeState] = useState(employees);\n  const [searchState, setSearchState] = useState(\"\");\n\n  compareBy = employee => {\n    return function (a, b) {\n      if (a[employeeState.name] < b[employeeState.name]) return -1;\n      if (a[employeeState.name] > b[employeeState.name]) return 1;\n      return 0;\n    };\n  };\n\n  sortBy = name => {\n    let arrayCopy = [...employeeState.data];\n    arrayCopy.sort(compareBy(name));\n    this.setState({\n      data: arrayCopy\n    });\n  };\n\n  const handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    let value = event.target.value; // Updating the input's state\n\n    setSearchState(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      searchState: searchState,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            onClick: sortBy('name'),\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Occupation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employeeState.filter(employee => employee.name.toLowerCase().includes(searchState.toLowerCase())).map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: employee.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.occupation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 137\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeeTable, \"tEIyAKLq4+m4v5DFKRBvPRuAkaw=\");\n\n_c = EmployeeTable;\nexport default EmployeeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeTable\");","map":{"version":3,"sources":["/Users/naywilkins/Desktop/Code School/Homework/employee-directory/employee-directory/src/components/employeeTable/EmployeeTable.js"],"names":["React","useState","employees","Nav","EmployeeTable","employeeState","setEmployeeState","searchState","setSearchState","compareBy","employee","a","b","name","sortBy","arrayCopy","data","sort","setState","handleInputChange","event","value","target","filter","toLowerCase","includes","map","id","occupation","location"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport employees from '../../employees.json';\nimport Nav from '../nav/Nav';\n\nfunction EmployeeTable() {\n\n\n    const [employeeState, setEmployeeState] = useState(employees);\n    const [searchState, setSearchState] = useState(\"\");\n\n\n\ncompareBy = (employee) => {\n    return function (a, b) {\n      if (a[employeeState.name] < b[employeeState.name]) return -1;\n      if (a[employeeState.name] > b[employeeState.name]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy = (name) => {\n    let arrayCopy = [...employeeState.data];\n    arrayCopy.sort(compareBy(name));\n    this.setState({data: arrayCopy});\n  }\n\n\n    const handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        let value = event.target.value;\n    \n    \n        // Updating the input's state\n        setSearchState(value);\n        \n\n      };\n\n\n\n    return (\n\n        <div className=\"App\">\n\n          <Nav searchState={searchState} onChange={handleInputChange}/>\n\n            <table className=\"table table-dark\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\" onClick={sortBy('name')}>Name</th>\n                        <th scope=\"col\">Occupation</th>\n                        <th scope=\"col\">Location</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {employeeState.filter(employee => employee.name.toLowerCase().includes(searchState.toLowerCase())).map(employee => (<tr>\n                        <th scope=\"row\">{employee.id}</th>\n                        <td>{employee.name}</td>\n                        <td>{employee.occupation}</td>\n                        <td>{employee.location}</td>\n                    </tr>))}\n\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default EmployeeTable;"]},"metadata":{},"sourceType":"module"}