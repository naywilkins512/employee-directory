{"version":3,"sources":["components/nav/Nav.js","components/employeeTable/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","value","searchState","onChange","type","placeholder","aria-label","EmployeeTable","useState","employees","employeeState","setEmployeeState","setSearchState","sortBy","name","arrayCopy","sort","a","b","compareBy","event","target","scope","onClick","width","height","viewBox","class","fill","xmlns","fill-rule","d","filter","employee","toLowerCase","includes","map","id","occupation","location","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAmBeA,MAhBf,SAAaC,GAET,OACI,qCACA,oDACR,qBAAKC,UAAU,uEAAf,SACI,sBAAMA,UAAU,2BAAhB,SACI,uBAAOC,MAAOF,EAAMG,YAAaC,SAAUJ,EAAMI,SAAUH,UAAU,uBAAuBI,KAAK,SAASC,YAAY,SAASC,aAAW,mBCuFnIC,MA7Ff,WAA0B,IAAD,EAGqBC,mBAASC,GAH9B,mBAGdC,EAHc,KAGCC,EAHD,OAIiBH,mBAAS,IAJ1B,mBAIdN,EAJc,KAIDU,EAJC,KAkBfC,EAAS,SAACC,GACZ,IAAIC,EAAS,YAAOL,GACpBK,EAAUC,KAVI,SAACF,GACf,OAAO,SAAUG,EAAGC,GAChB,OAAID,EAAEH,GAAQI,EAAEJ,IAAe,EAC3BG,EAAEH,GAAQI,EAAEJ,GAAc,EACvB,GAMIK,CAAUL,IACzBH,EAAiBI,IAmBrB,OAEI,sBAAKf,UAAU,MAAf,UAEI,cAAC,EAAD,CAAKE,YAAaA,EAAaC,SAjBb,SAAAiB,GAEtB,IAAInB,EAAQmB,EAAMC,OAAOpB,MAIzBW,EAAeX,MAaX,wBAAOD,UAAU,mBAAjB,UACI,gCACI,+BACI,qBAAIsB,MAAM,MAAV,cACA,mBAAGC,QAAS,kBAAMV,EAAO,OAAzB,SACQ,qBAAKW,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,MAAM,yBAAyBC,KAAK,eAAeC,MAAM,6BAA3G,SACI,sBAAMC,YAAU,UAAUC,EAAE,sJAIxC,qBAAIT,MAAM,MAAV,iBACA,mBAAGC,QAAS,kBAAMV,EAAO,SAAzB,SACQ,qBAAKW,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,MAAM,yBAAyBC,KAAK,eAAeC,MAAM,6BAA3G,SACI,sBAAMC,YAAU,UAAUC,EAAE,sJAIxC,qBAAIT,MAAM,MAAV,uBACA,mBAAGC,QAAS,kBAAMV,EAAO,eAAzB,SACQ,qBAAKW,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,MAAM,yBAAyBC,KAAK,eAAeC,MAAM,6BAA3G,SACI,sBAAMC,YAAU,UAAUC,EAAE,sJAIxC,qBAAIT,MAAM,MAAV,qBACA,mBAAGC,QAAS,kBAAMV,EAAO,aAAzB,SACQ,qBAAKW,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,MAAM,yBAAyBC,KAAK,eAAeC,MAAM,6BAA3G,SACI,sBAAMC,YAAU,UAAUC,EAAE,2JAMhD,gCACKrB,EAAcsB,QAAO,SAAAC,GAAQ,OAAIA,EAASnB,KAAKoB,cAAcC,SAASjC,EAAYgC,kBAAgBE,KAAI,SAAAH,GAAQ,OAAK,+BAChH,oBAAIX,MAAM,MAAV,SAAiBW,EAASI,KAC1B,6BAAKJ,EAASnB,OACd,6BAAKmB,EAASK,aACd,6BAAKL,EAASM,0BCxEvBC,MAXf,WAEE,OACE,qBAAKxC,UAAU,MAAf,SAED,cAAC,EAAD,OCEYyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d71d0fcd.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Nav(props) {\n\n    return (\n        <>\n        <h1>Employee Directory</h1>\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\">\n    <form className=\"form-inline my-2 my-lg-0\">\n        <input value={props.searchState} onChange={props.onChange} className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        </input>\n    </form>\n</nav>\n</>\n    )\n};\n\n\nexport default Nav;","import React, { useState } from 'react';\nimport employees from '../../employees.json';\nimport Nav from '../nav/Nav';\n\nfunction EmployeeTable() {\n\n\n    const [employeeState, setEmployeeState] = useState(employees);\n    const [searchState, setSearchState] = useState(\"\");\n\n\n\n    // sorting function\n\n    const compareBy = (name) => {\n        return function (a, b) {\n            if (a[name] < b[name]) return -1;\n            if (a[name] > b[name]) return 1;\n            return 0;\n        };\n    }\n\n    const sortBy = (name) => {\n        let arrayCopy = [...employeeState];\n        arrayCopy.sort(compareBy(name));\n        setEmployeeState(arrayCopy);\n    }\n\n\n\n\n    const handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        let value = event.target.value;\n\n\n        // Updating the input's state\n        setSearchState(value);\n\n\n    };\n\n\n\n    return (\n\n        <div className=\"App\">\n\n            <Nav searchState={searchState} onChange={handleInputChange} />\n\n            <table className=\"table table-dark\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#\n                        <i onClick={() => sortBy('id')}>\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-down-short\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z\" />\n                                </svg>\n                            </i>\n                        </th>\n                        <th scope=\"col\">Name\n                        <i onClick={() => sortBy('name')}>\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-down-short\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z\" />\n                                </svg>\n                            </i>\n                        </th>\n                        <th scope=\"col\">Occupation\n                        <i onClick={() => sortBy('occupation')}>\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-down-short\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z\" />\n                                </svg>\n                            </i>\n                        </th>\n                        <th scope=\"col\">Location\n                        <i onClick={() => sortBy('location')}>\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-down-short\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z\" />\n                                </svg>\n                            </i>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {employeeState.filter(employee => employee.name.toLowerCase().includes(searchState.toLowerCase())).map(employee => (<tr>\n                        <th scope=\"row\">{employee.id}</th>\n                        <td>{employee.name}</td>\n                        <td>{employee.occupation}</td>\n                        <td>{employee.location}</td>\n                    </tr>))}\n\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default EmployeeTable;","import React from 'react';\nimport './App.css';\nimport EmployeeTable from './components/employeeTable/EmployeeTable';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n   <EmployeeTable/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}